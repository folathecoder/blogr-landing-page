// ========== CONVERT PIXELS TO REMS
@function rem($size) {
    $remSize: $size / 16;
    @return #{$remSize}rem;
  }

// ========== MEDIA QUERIES (MIXINS)
@mixin media-query ($size) {
    @if $size == desktop {
        @media screen and (min-width: 1200px) {
            @content;
        }
    }
    @else if $size == tablet {
        @media screen and (min-width: 992px) {
            @content;
        }
    } 
    @else if $size == tablet-mini {
        @media screen and (min-width: 786px) {
            @content;
        }
    } 
    @else if $size == large-mobile {
        @media screen and (min-width: 602px) {
            @content;
        }
    } 
    @else if $size == mobile {
        @media screen and (min-width: 300px) {
            @content;
        }
    } 
    @else if $size == mobile-mini {
      @media screen and (min-width: 300px) {
          @content;
      }
  } 
  }

// ========== COLORS
$color-cta-text: hsl(356, 100%, 66%);
$color-cta-bg: hsl(355, 100%, 74%);
$color-headings: hsl(208, 49%, 24%);
$color-neutral: hsl(0, 0%, 100%);
$color-footer-bg: hsl(240, 10%, 16%);
$color-body-text: hsl(207, 13%, 34%);

// ========== GRADIENTS
$gradient-sections: linear(hsl(13, 100%, 72%), hsl(353, 100%, 62%));
$gradient-body: linear(hsl(237, 17%, 21%), hsl(237, 23%, 32%));

// ========== FONT WEIGHTS
$weight-light: 300;
$weight-regular: 400;
$weight-medium: 500;
$weight-semi-bold: 600;
$weight-bold: 700;

// ========== COLORS
$font-primary: 'Overpass', sans-serif;
$font-secondary: 'Ubuntu', sans-serif;

// ========== CSS RESET
*,
*::before,
*::after {
  box-sizing: border-box;
}

body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

ul[role="list"],
ol[role="list"] {
  list-style: none;
}

li {
    list-style: none;
    margin: rem(0);
    padding: rem(0);
}

html:focus-within {
  scroll-behavior: smooth;
}

a:not([class]) {
  text-decoration-skip-ink: auto;
}

img,
picture {
  max-width: 100%;
  display: block;
}
//------- Controls Animations
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
   scroll-behavior: auto;
  }
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

// ========== BASE
body {
    text-rendering: optimizeSpeed;
    background-color: red;
    max-width: 100%;
    font-family: $font-primary;
  }

// ========== TYPOGRAPHY

a {
    text-decoration: none;

}

h1 {
    font-size: rem(30);
    line-height: rem(40);
    font-family: $font-secondary;
}

p a {
    font-size: rem(16);
}

.btn {
    background-color: purple;
    color: $color-cta-text;
    padding: rem(15) rem(15);
    border-radius: rem(25);
}


.cta__wrap {
    background-color: gold;
    min-height: rem(500);
    max-width: 100%;
    border-radius: rem(0) rem(0) rem(0) rem(100);
}

header {
    max-width: 100%;
    min-height: rem(0);
    // background-color: yellow;
    padding: rem(0) rem(25);
    z-index: 1000;
}

.header__container {
    max-width: rem(1050);
    margin: rem(0) auto;
    padding-top: rem(40);
    // background-color: black;
    display: flex;
    align-items: center;
    
}
.logo {
    // background-color: blue;
    flex: 1;
}
.mobile__menu {
    // background-color: rgb(15, 102, 15);
    flex: 1;
    display: flex;
    justify-content: flex-end;
}

.hero {
    max-width: 100%;
    min-height: rem(400);
    background-color: rgb(204, 143, 94);
    padding: rem(0) rem(35);
    display: flex;
    align-items: center;

    &__container {
        max-width: rem(1050);
        margin: rem(0) auto;
        background-color: rgb(255, 255, 255);
        text-align: center;

        h1 {
            margin-bottom: rem(15);
        }
    }

    &__buttons {
        min-height: rem(100);
        background-color: green;
        display: flex;
        justify-content: space-between;
    }
}





























// ========== COLORS
// ========== COLORS
// ========== COLORS
// ========== COLORS
// ========== COLORS
// ========== COLORS
// ========== COLORS
// ========== COLORS
// ========== COLORS
// ========== COLORS
// ========== COLORS
